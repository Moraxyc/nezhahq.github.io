import{_ as s,c as i,o as a,a4 as e}from"./chunks/framework.BmdFiWrL.js";const u=JSON.parse('{"title":"安装 Agent","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/agent.md","filePath":"guide/agent.md","lastUpdated":1733168573000}'),n={name:"guide/agent.md"},t=e(`<h1 id="安装-agent" tabindex="-1">安装 Agent <a class="header-anchor" href="#安装-agent" aria-label="Permalink to &quot;安装 Agent&quot;">​</a></h1><p><strong>哪吒监控的被控端服务被称为 Agent，本文档将介绍如何在被控端服务器上安装 Agent，并与 Dashboard 连接。</strong></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Agent 二进制文件仓库地址为：<a href="https://github.com/nezhahq/agent/releases" target="_blank" rel="noreferrer">https://github.com/nezhahq/agent/releases</a></p></div><h2 id="一键安装-agent" tabindex="-1">一键安装 Agent <a class="header-anchor" href="#一键安装-agent" aria-label="Permalink to &quot;一键安装 Agent&quot;">​</a></h2><p>哪吒监控支持在 Windows、macOS 和 Linux 上一键安装 Agent。遵循本文档的步骤，你可以轻松地在服务器上部署它。</p><h3 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h3><p>在安装前，需要提前在管理面板中设置通信域名，该域名不建议接入 CDN。本文档以示例通信域名 “data.example.com” 为例。</p><ol><li>在后台管理面板点击头像，进入“系统设置”页。</li><li>在“仪表板服务器域名/IP（无 CDN）”项中填入通信域名。</li><li>点击“确认”保存设置。</li></ol><h3 id="一键安装步骤" tabindex="-1">一键安装步骤 <a class="header-anchor" href="#一键安装步骤" aria-label="Permalink to &quot;一键安装步骤&quot;">​</a></h3><ol><li>在 <code>服务器</code> 页面中，点击 <code>安装命令</code> 并选择对应操作系统，安装命令将自动复制到你的剪贴板。</li><li>在被控端服务器中运行安装命令，等待安装完成后返回到 <code>服务器</code> 页面查看是否上线。</li><li>如果安装成功，页面中将自动弹出新的服务器，你可以点击编辑按钮为其设置名称。</li></ol><h3 id="平台特有说明" tabindex="-1">平台特有说明 <a class="header-anchor" href="#平台特有说明" aria-label="Permalink to &quot;平台特有说明&quot;">​</a></h3><h4 id="windows-特殊说明" tabindex="-1">Windows 特殊说明 <a class="header-anchor" href="#windows-特殊说明" aria-label="Permalink to &quot;Windows 特殊说明&quot;">​</a></h4><ol><li>在 Windows 服务器中，运行 PowerShell。</li><li>在 PowerShell 中粘贴并运行安装命令。</li><li>如遇到「执行策略变更」确认提示，输入 <code>Y</code> 并回车。</li></ol><h2 id="其他方式安装-agent" tabindex="-1">其他方式安装 Agent <a class="header-anchor" href="#其他方式安装-agent" aria-label="Permalink to &quot;其他方式安装 Agent&quot;">​</a></h2><hr><h3 id="在群晖系统中安装-agent-dsm-7" tabindex="-1">在群晖系统中安装 Agent（DSM 7） <a class="header-anchor" href="#在群晖系统中安装-agent-dsm-7" aria-label="Permalink to &quot;在群晖系统中安装 Agent（DSM 7）&quot;">​</a></h3><p>由于群晖（Synology NAS）设备的系统基于特定版本的 Linux，其 shell 环境和软件包管理与标准 Linux 系统有所不同，因此不支持一键安装脚本。需要手动安装 Agent，具体步骤如下：</p><hr><h4 id="_1-准备工作" tabindex="-1">1. 准备工作 <a class="header-anchor" href="#_1-准备工作" aria-label="Permalink to &quot;1. 准备工作&quot;">​</a></h4><ol><li><p><strong>确保拥有管理员权限</strong></p><ul><li>登录群晖的管理界面，或通过 SSH 使用管理员账户登录设备。</li></ul></li><li><p><strong>安装必要的依赖</strong><br> 如果群晖设备尚未安装 <code>wget</code>、<code>unzip</code> 或 <code>curl</code>，请按照以下步骤安装依赖：</p><ul><li><p><strong>启用 SynoCommunity 仓库</strong><br> 访问 <a href="https://synocommunity.com/" target="_blank" rel="noreferrer">SynoCommunity</a> 并按照指南启用，以支持更多软件包。</p></li><li><p><strong>安装 Entware</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载并安装 Entware</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/Entware/entware-installer/master/installer.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /bin/sh</span></span></code></pre></div></li><li><p><strong>通过 Entware 安装所需依赖</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">opkg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">opkg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unzip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span></span></code></pre></div></li></ul></li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>也可以提前下载并解压好 Nezha Agent 的二进制文件，通过群晖的 DSM File Station 手动上传，免去安装依赖的步骤。</p></div><hr><h4 id="_2-下载-nezha-agent" tabindex="-1">2. 下载 Nezha Agent <a class="header-anchor" href="#_2-下载-nezha-agent" aria-label="Permalink to &quot;2. 下载 Nezha Agent&quot;">​</a></h4><ol><li><p><strong>确定群晖的 CPU 架构</strong><br> 使用以下命令获取设备的架构信息：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uname</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span></span></code></pre></div><p>常见架构对应关系：</p><ul><li><code>x86_64</code> 对应 <code>amd64</code></li><li><code>armv7l</code> 对应 <code>arm</code></li><li><code>aarch64</code> 对应 <code>arm64</code></li></ul></li><li><p><strong>下载适配的 Nezha Agent 二进制文件</strong><br> 根据设备架构选择正确的下载链接。例如，对于 <code>amd64</code> 架构：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nezha-agent.zip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/nezhahq/agent/releases/latest/download/nezha-agent_linux_amd64.zip</span></span></code></pre></div></li><li><p><strong>解压文件</strong><br> 将下载的压缩包解压到指定目录，例如 <code>/volume1/nezha</code>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unzip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nezha-agent.zip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /volume1/nezha</span></span></code></pre></div></li></ol><hr><h4 id="_3-创建配置文件" tabindex="-1">3. 创建配置文件 <a class="header-anchor" href="#_3-创建配置文件" aria-label="Permalink to &quot;3. 创建配置文件&quot;">​</a></h4><ol><li><strong>创建并编辑配置文件</strong><br> 在 <code>/volume1/nezha</code> 目录下创建 <code>config.yml</code> 文件，并添加以下内容：<div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">client_secret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">your_agent_secret</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">disable_auto_update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">disable_command_execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">disable_force_update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">disable_nat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">disable_send_query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">gpu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">insecure_tls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ip_report_period</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1800</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">report_delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">data.example.com:8008</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">skip_connection_count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">skip_procs_count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">temperature</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">tls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">use_gitee_to_upgrade</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">use_ipv6_country_code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">uuid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">your_uuid</span></span></code></pre></div><ul><li><strong>字段说明</strong>： <ul><li><code>server</code>：替换为 Dashboard 地址和端口，如 <code>data.example.com:8008</code>。</li><li><code>client_secret</code>：替换为 Dashboard 配置文件中的 <code>agentsecretkey</code>，路径通常为 <code>/opt/nezha/dashboard/data/config.yaml</code>。</li><li><code>uuid</code>：为该 Agent 生成一个唯一标识符，不要与同一个 Dashboard 中其他的 Agent 重复，可使用 <code>uuidgen</code> 命令生成：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uuidgen</span></span></code></pre></div></li></ul></li><li><strong>保存文件</strong>：将文件保存至 <code>/volume1/nezha/config.yml</code>。</li></ul></li></ol><hr><h4 id="_4-运行-agent" tabindex="-1">4. 运行 Agent <a class="header-anchor" href="#_4-运行-agent" aria-label="Permalink to &quot;4. 运行 Agent&quot;">​</a></h4><ol><li><p><strong>赋予执行权限并启动 Agent</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /volume1/nezha/nezha-agent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/volume1/nezha/nezha-agent</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /volume1/nezha/config.yml</span></span></code></pre></div></li><li><p><strong>验证 Agent 连接</strong></p><ul><li>查看 Dashboard，检查是否有新设备上线。</li><li>查看 Agent 的日志，确保没有报错信息。</li></ul></li></ol><hr><h4 id="_5-设置为开机自启动" tabindex="-1">5. 设置为开机自启动 <a class="header-anchor" href="#_5-设置为开机自启动" aria-label="Permalink to &quot;5. 设置为开机自启动&quot;">​</a></h4><p>群晖系统不支持 <code>systemd</code>，但可以通过任务计划（Task Scheduler）实现开机自启动：</p><ol><li><p><strong>登录群晖 DSM 管理界面</strong><br> 使用管理员账户登录 DSM。</p></li><li><p><strong>打开任务计划</strong><br> 前往 <strong>控制面板</strong> &gt; <strong>任务计划</strong>。</p></li><li><p><strong>创建新任务</strong></p><ul><li><strong>任务类型</strong>：触发的任务 &gt; 用户定义的脚本。</li><li><strong>任务名称</strong>：例如 <code>Start Nezha Agent</code>。</li><li><strong>用户账号</strong>：选择 <code>root</code>。</li><li><strong>任务设置</strong>： <ul><li><strong>触发事件</strong>：选择 <strong>开机</strong>。</li><li><strong>任务内容</strong>：在用户定义的脚本中输入以下命令：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /volume1/nezha/nezha-agent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/volume1/nezha/nezha-agent</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /volume1/nezha/config.yml</span></span></code></pre></div></li></ul></li></ul></li><li><p><strong>保存并运行任务</strong></p><ul><li>保存任务后，选择 <code>Start Nezha Agent</code> 任务，手动运行一次以确保配置正确。</li><li>返回 Dashboard，确认 Agent 是否正常运行。</li></ul></li></ol>`,34),l=[t];function h(p,o,d,k,r,g){return a(),i("div",null,l)}const y=s(n,[["render",h]]);export{u as __pageData,y as default};
